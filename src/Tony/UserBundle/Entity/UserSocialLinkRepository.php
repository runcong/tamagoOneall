<?php

namespace Tony\UserBundle\Entity;

use Doctrine\ORM\EntityRepository;
use Symfony\Component\Validator\Constraints\Null;


/**
 * UserSocialLinkRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class UserSocialLinkRepository extends EntityRepository
{


    public function GetUserIdForUserToken($user_token){

        $query = $this->createQueryBuilder('l')
        //    ->leftJoin('l.userId', 'u')
            ->select('l.userId')
            ->where('l.userToken = :user_token')
            ->setParameter('user_token', $user_token)
            ->getQuery();

        return $query->getResult();
        // Execute the query: SELECT user_id FROM user_social_link WHERE user_token = <user_token>
        // Return the user_id or null if none found.
    }

    public function GetUserTokenForUserId($user_id){

         $ql = $this->createQueryBuilder('l')
            ->select('l.userToken')
            ->where('l.id = :user_id')
            ->setParameter('user_id', $user_id);

        return $ql->getQuery()
            ->getResult();
        // Execute the query: SELECT user_token FROM user_social_link WHERE user_id = <user_id>
        // Return the user_token or null if none found.

    }

    public function UnlinkUserTokenFromUserId($user_token, $user_id){

        $this->createQueryBuilder('l')
            ->delete('TonyUserBundle:UserSocialLink','l')
            ->where('l.userToken = :user_token')
            ->setParameter('user_token', $user_token)

            ->update('TonyUserBundle:User', 'u')
            ->set('u.sociallinkId', Null)
            ->where('u.sociallinkId = :user_token')
            ->setParameter('user_id', $user_id);

        // Execute the query: DELETE FROM user_social_link WHERE user_token = <user_token> AND user_id = <user_id>
        // Nothing has to be returned
    }


}
